# Sample Nginx configuration from webscaff.
#
# See beforehand:
# http://wiki.nginx.org/Pitfalls
# http://wiki.nginx.org/QuickStart
# http://wiki.nginx.org/Configuration

server_tokens off;

server {

    listen 80 default_server;

    # Your domain name goes here.
    server_name .mydomain.some;
    charset utf-8;
    client_max_body_size 4M;

    # This will enable HTTPS.
    listen 443 ssl;
    # We'll use certificates from letsencrypt.org
    ssl_certificate /etc/letsencrypt/live/mydomain.some/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/mydomain.some/privkey.pem;

    # This will redirect everything to HTTPS
    # if ($scheme = http) {
    #     return 301 https://$server_name$request_uri;
    # }

    # This will cut-off unwanted agents.
    if ($http_user_agent ~* LWP::Simple|wget|libwww-perl) {
        return 403;
    }

    # No response for unknown hosts.
    if ($host !~* ^(mydomain.some|www.mydomain.some)$ ) {
        return 444;
    }

    location / {
        # Maintenance mode support.
        if (-f /var/www/myproject/503) {
            return 503;
        }

        # Custom error pages.
        error_page 502 /error.html;
        error_page 503 /maintenance.html;

        # Pass to uWSGI.
        uwsgi_pass unix:///run/uwsgi/app/myproject/socket;
        include uwsgi_params;
    }

    # Custom error pages.
    location /maintenance.html {
        root /var/www/myproject/myproject/nginx_pages/;
    }
    location /error.html {
        root /var/www/myproject/myproject/nginx_pages/;
    }

    # Static. User uploaded media.
    location /media {
        access_log off;
        expires 1d;
        alias /var/www/myproject/myproject/data/media/;
    }
    # Static. Application shipped static.
    location /static {
        access_log off;
        expires 1d;
        alias /var/www/myproject/myproject/data/static/;
    }

    # Compression configuration.
    gzip on;
    gzip_http_version 1.0;
    gzip_comp_level 3;
    gzip_min_length 800;
    gzip_buffers 16 8k;
    gzip_proxied any;
    gzip_disable "msie6";
    gzip_vary on;
    gzip_types
        text/css
        text/plain
        text/javascript
        application/javascript
        application/rss+xml
        application/json;

}


# Redirect. IP to Domain.
server {
    server_name 111.111.111.111;
    return 301 $scheme://mydomain.some$request_uri;
}
# Redirect. WWW to Domain.
server {
    server_name www.mydomain.some;
    return 301 $scheme://mydomain.some$request_uri;
}
